名字：名称：使用 Pake CLI 构建应用程序


    输入：
      平台：
        描述：'Windows'
        必需： 真
        默认：'macos-latest'
        类型：
类型：选择
        选项：
          - 'windows-latest'
          - 'macos-latest'
          - 'ubuntu-24.04'
      地址：
        描述：'https://fanqienovel.com/main/writer/login'
        必需： 真

        描述：'番茄小说作家，英语，Linux 不区分大小写'
        必需： 真

        描述：‘图标，图片链接，可选’
        必需： 否
      宽度：
        描述：'宽度，可选'
        必需： 否
        默认： '1200'
      高度：
        描述：高度，可选
        必需： 否
        默认： '780'
      全屏：
        描述：'全屏，启动时，可选'
        必需： 否
        类型： 类型：布尔值
        默认： false

: '隐藏标题栏，仅限 MacOS，可选'
        必需： 否
        类型： 类型：布尔值
        默认： false
      多架构：
        描述：'多架构，仅限 MacOS，可选'
        必需： 否
        类型：
类型：布尔值
        默认： false
      目标:
        描述：'目标，仅限 Linux，可选'
        必需： 否
        默认： 'deb'
        类型：
类型：选择
        选项：
          - 'deb'
          - 'appimage'
          - 'rpm'

工作：
  构建：
    名称:     名称: ${{ inputs.platform }}{{ inputs.platform }}
    runs-on:     运行于: ${{ inputs.platform }}{{ 输入平台 }}
    策略:
      快速失败：假

    步骤输入：
      - 名字: - 名称: 检出仓库
        uses:         用途：actions/checkout@v3

      - 名称:       - 名称: 安装节点
        uses:         用途：actions/setup-node@v3
        与：
          节点版本： 18

      - 名称:       - 名称: 安装 Rust 用于 ubuntu-24.04
        如果         如果     输入的平台 == 'ubuntu-24.04''ubuntu-24.04'
        使用:         使用: dtolnay/rust-toolchain@稳定
        与：
          toolchain:           toolchain: 稳定
          target:           目标: x86_64-unknown-linux-musl

      - 名称：       - 名称：安装 Rust 用于 windows-latest
        如果         如果     输入的平台 == 'windows-latest''windows-latest''windows-latest'
        使用:                 使用:         使用: dtolnay/rust-toolchain@稳定: dtolnay/rust-toolchain@稳定
        与：
          toolchain:                     工具链：稳定-x86_64-msvc
          target:                     目标: x86_64-pc-windows-msvc: x86_64-pc-windows-msvc

      - 名字：             -
- 名称: 安装 Rust 用于 macos-latest: 安装 Rust 用于 macos-latest
        如果：                 如果：         如果：inputs.platform == 'macos-latest'：inputs.platform == 'macos-latest''macos-latest'
        使用:         使用: dtolnay/rust-toolchain@稳定
        与：
          toolchain:           toolchain: 稳定
          target:           目标: x86_64-apple-darwin

      - name:       - name: 安装依赖项（仅限 Ubuntu）
        如果         如果     输入的平台 == 'ubuntu-24.04''ubuntu-24.04'
        uses:         用途: awalsh128/cache-apt-pkgs-action@v1.4.3
        与：
          packages:           软件包：libsoup3.0-dev libdbus-1-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev gnome-video-effects gnome-video-effects-extra
          版本：1.1

      - 名称:       - 名称: 本地安装 番茄写作
        外壳：         外壳: bash
        运行： |
          echo “在本地安装 pake”
          npm install pake-cli

      - 名字: - name: Rust 缓存恢复
        uses:         用途: actions/cache/restore@v3
        id:         id: 缓存存储
        与：
          路径: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            node_modules/pake-cli/src-tauri/target/
          key:           key: ${{ inputs.platform }}-cargo-${{ hashFiles('node_modules/pake-cli/src-tauri/Cargo.lock') }}{{ inputs.platform }}-cargo-${{ hashFiles('node_modules/pake-cli/src-tauri/Cargo.lock') }}

      - 名称：       - 名称：安装依赖项
        运行： |
          npm 安装 shelljs
          npm install axios

      - 名称:       - 名称: 使用 pake-cli 构建
        运行： |
          node ./script/build_with_pake_cli.js
        环境:
          URL:           URL: ${{ inputs.url }}{{ inputs.url }}
          名称:           名字: ${{ inputs.name }}{{ inputs.name }}
          ICON：           图标：${ inputs.icon }}{{ inputs.icon }}
高度：${{ inputs.height }}{{ inputs.height }}
          宽度           宽度：${{ inputs.width }}{{ inputs.width }}
          HIDE_TITLE_BAR:           隐藏标题栏: ${{ inputs.hide_title_bar }}{{ inputs.hide_title_bar }}
          全屏：           全屏：${{ inputs.fullscreen }}{{ inputs.fullscreen }}
          多架构:           多架构: ${{ inputs multi_arch }}{{ inputs multi_arch }}
          目标:           目标：${{ inputs.targets }}{{ inputs.targets }}
          PKG_CONFIG_PATH:           PKG_CONFIG_PATH: /usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig:/usr/share/pkgconfig
          PKG_CONFIG_ALLOW_SYSTEM_LIBS：1
          PKG_CONFIG_ALLOW_SYSTEM_CFLAGS：1

      - 名称:       - 名称: 上传档案
        uses:         用途：actions/upload-artifact@v4
        与：
          名字：           名字：输出-${{ inputs.platform }}.zip{{ inputs.platform }}.zip
          路径:           路径：node_modules/pake-cli/output/*
          保留天数：3

      - 名称:       - 名称: Rust 缓存存储
        使用:         使用: actions/cache/save@v3
        如果         如果     steps.cache_store.outputs.cache-hit 不等于 'true''真'
        与：
          路径: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            node_modules/pake-cli/src-tauri/target/
          key: {{ inputs.platform }}-cargo-${{ hashFiles('node_modules/pake-cli/src-tauri/Cargo.lock') }}: ${{ inputs.platform }}-cargo-${{ hashFiles('node_modules/pake-cli/src-tauri/Cargo.lock') }}
